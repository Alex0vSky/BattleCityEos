//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `acme.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

#include <acme.h>
#include <IceUtil/PushDisableWarnings.h>
#include <Ice/InputStream.h>
#include <Ice/OutputStream.h>
#include <IceUtil/PopDisableWarnings.h>

#if defined(_MSC_VER)
#   pragma warning(disable:4458) // declaration of ... hides class member
#elif defined(__clang__)
#   pragma clang diagnostic ignored "-Wshadow"
#elif defined(__GNUC__)
#   pragma GCC diagnostic ignored "-Wshadow"
#endif

#ifndef ICE_IGNORE_VERSION
#   if ICE_INT_VERSION / 100 != 307
#       error Ice version mismatch!
#   endif
#   if ICE_INT_VERSION % 100 >= 50
#       error Beta header file detected
#   endif
#   if ICE_INT_VERSION % 100 < 10
#       error Ice patch level mismatch!
#   endif
#endif

#ifdef ICE_CPP11_MAPPING // C++11 mapping

namespace
{

}

Acme::BaseObject::~BaseObject()
{
}

Acme::Bonus::~Bonus()
{
}

Acme::Brick::~Brick()
{
}

Acme::Bullet::~Bullet()
{
}

Acme::Eagle::~Eagle()
{
}

Acme::Bullet2::~Bullet2()
{
}

Acme::BulletMix2::~BulletMix2()
{
}

Acme::Tank::~Tank()
{
}

Acme::Enemy::~Enemy()
{
}

Acme::Player::~Player()
{
}

namespace Ice
{
}

#else // C++98 mapping

namespace
{

}

Acme::BaseObject::~BaseObject()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(BaseObject* p) { return p; }
/// \endcond

Acme::Bonus::~Bonus()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Bonus* p) { return p; }
/// \endcond

Acme::Brick::~Brick()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Brick* p) { return p; }
/// \endcond

Acme::Bullet::~Bullet()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Bullet* p) { return p; }
/// \endcond

Acme::Eagle::~Eagle()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Eagle* p) { return p; }
/// \endcond

Acme::Bullet2::~Bullet2()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Bullet2* p) { return p; }
/// \endcond

Acme::BulletMix2::~BulletMix2()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(BulletMix2* p) { return p; }
/// \endcond

Acme::Tank::~Tank()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Tank* p) { return p; }
/// \endcond

Acme::Enemy::~Enemy()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Enemy* p) { return p; }
/// \endcond

Acme::Player::~Player()
{
}

/// \cond INTERNAL
::Ice::LocalObject* Acme::upCast(Player* p) { return p; }
/// \endcond

namespace Ice
{
}

#endif
