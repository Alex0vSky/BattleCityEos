// resources\proto\AllInOne.proto - achme
syntax = "proto3";

package A0S_proto;

message SDL_Rect { int32 x = 1; int32 y = 2; int32 w = 3; int32 h = 5; }
message SDL_Point { int32 x = 1; int32 y = 2; }

enum SpriteType
{
	ST_TANK_A = 0;
	ST_TANK_B = 1;
	ST_TANK_C = 2;
	ST_TANK_D = 3;
	
	ST_PLAYER_1 = 4;
	ST_PLAYER_2 = 5;
	
	ST_BRICK_WALL = 6;
	ST_STONE_WALL = 7;
	ST_WATER = 8;
	ST_BUSH = 9;
	ST_ICE = 10;
	
	ST_BONUS_GRENADE = 11;
	ST_BONUS_HELMET = 12;
	ST_BONUS_CLOCK = 13;
	ST_BONUS_SHOVEL = 14;
	ST_BONUS_TANK = 15;
	ST_BONUS_STAR = 16;
	ST_BONUS_GUN = 17;
	ST_BONUS_BOAT = 18;
	
	ST_SHIELD = 19;
	ST_CREATE = 20;
	ST_DESTROY_TANK = 21;
	ST_DESTROY_BULLET = 22;
	ST_BOAT_P1 = 23;
	ST_BOAT_P2 = 24;
	
	ST_EAGLE = 25;
	ST_DESTROY_EAGLE = 26;
	ST_FLAG = 27;
	
	ST_BULLET = 28;
	
	ST_LEFT_ENEMY = 29;
	ST_STAGE_STATUS = 30;
	
	ST_TANKS_LOGO = 31;
	
	ST_NONE = 32;
}

message Object {
    /**
     * Display time of the current animation frame.
     */
    uint32 frame_display_time = 1;
    /**
     * Number of the current animation frame.
     */
    int32 current_frame = 2;
    /**
     * The variable says whether the object should be deleted. If change is equal to @a true, no updating and drawing of the object is skipped.
     */
    bool to_erase = 3;
    /**
     * Collision rectangle; may be smaller than the dimensions of dest_rect.
     */
    SDL_Rect collision_rect = 4;
    /**
     * The target position of the object on the screen.
     */
    SDL_Rect dest_rect = 5;
    /**
     * Position on the texture of the currently displayed frame.
     */
    SDL_Rect src_rect = 6;
    /**
     * Object type.
     */
    SpriteType type = 7;
    /**
     * Accurate horizontal position of the object.
     */
    double pos_x = 8;
    /**
     * Accurate vertical position of the object.
     */
    double pos_y = 9;
}

enum Direction
{
    D_UP = 0;
    D_RIGHT = 1;
    D_DOWN = 2;
    D_LEFT = 3;
};

message Bullet {
	Object object = 1;
    /**
     * Projectile speed.
     */
    double speed = 2;
    /**
     * The variable stores information whether the bullet collided with something.
     */
    bool collide = 3;
    /**
     * The variable stores information whether the bullet has increased damage.
     * Increased damage allows you to destroy stone walls and bushes.
     */
    bool increased_damage = 4;
    /**
     * The direction of the bullet's movement.
     */
    Direction direction = 5;
}

message Bonus {
	Object object = 1;
    /**
     * Time since bonus creation.
     */
    uint32 bonus_show_time = 2;
    /**
     * Variable storing information about whether the bonus is currently displayed; used for flashing.
     */
    bool show = 3;
}

message Tank {
	Object object = 1;
	int32 flags = 2;
	int32 slip_time = 3;
	int32 new_direction = 4;
	uint32 bullet_max_size = 5;
	double default_speed = 6;
}

message Player {
	Tank tank = 1;
	int32 star_count = 2;
	uint32 fire_time = 3;
	bool movement = 4;
	bool menu = 5;
}

message Enemy {
	Tank tank = 1;
	uint32 direction_time = 2;
	uint32 keep_direction_time = 3;
    uint32 speed_time = 4;
    uint32 try_to_go_time = 5;
    uint32 fire_time = 6;
    uint32 reload_time = 7;
    SDL_Point target_position = 8;
}
